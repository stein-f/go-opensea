openapi: 3.0.3
info:
  title: Opensea API
  description: Opensea NFT marketplace REST api spec
  version: 1.0.0

servers:
  - url: https://api.opensea.io
    description: Production API

security:
  - apiKeyAuth: []

paths:
  /api/v2/offers:
    post:
      summary: Create Criteria Offer
      description: Create a criteria offer to purchase any NFT in a collection or which matches the specified trait.
      operationId: createCriteriaOffer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriteriaOffer'
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriteriaOfferResponse'
        '400':
          description: Account not found
        '500':
          description: Server error
  /api/v2/accounts/{username}:
    get:
      summary: Get account
      description: Get an OpenSea Account Profile including details such as bio, social media usernames, and profile image.
      operationId: getAccount
      parameters:
        - name: username
          in: path
          required: true
          description: The account to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Account not found
        '500':
          description: Server error
  /api/v2/orders/chain/{chain}/protocol/{protocol_address}/{order_hash}/cancel:
    post:
      summary: Cancel Order
      description: Offchain cancel a single order, offer or listing, by its order hash when protected by the SignedZone. Protocol and Chain are required to prevent hash collisions. Please note cancellation is only assured if a fulfillment signature was not vended prior to cancellation.
      operationId: cancelOrder
      parameters:
        - name: chain
          in: path
          required: true
          description: The blockchain on which to filter the results, e.g. "ethereum", "abstract"
          schema:
            type: string
        - name: protocol_address
          in: path
          required: true
          description: The contract address of the protocol to use in the request.
          schema:
            type: string
        - name: order_hash
          in: path
          required: true
          description: The hash of the order to retrieve.
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                offererSignature:
                  type: string
                  description: An EIP-712 signature from the offerer of the order. If this is not provided, the user associated with the API Key will be checked instead. The signature must be a EIP-712 signature consisting of the order's Seaport contract's name, version, address, and chain. The struct to sign is OrderHash containing a single bytes32 field.
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_signature_issued_valid_until:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error
  /api/v2/collections/{collection_slug}:
    get:
      summary: Get collection
      description: Get a single collection including details such as fees, traits, and links.
      operationId: getCollection
      parameters:
        - name: collection_slug
          in: path
          required: true
          description: collection to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          description: Collection not found
        '500':
          description: Server error
  /api/v2/offers/collection/{collection_slug}:
    get:
      summary: Get collection offers
      description: Get the active, valid collection offers for the specified collection.
      operationId: getCollectionOffers
      parameters:
        - name: collection_slug
          in: path
          required: true
          description: collection to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffersResponse'
        '400':
          description: Collection not found
        '500':
          description: Server error
  /api/v2/collections/{collection_slug}/stats:
    get:
      summary: Get collection stats
      description: Retrieve statistical data for a specific collection, including volume, sales, and other metrics.
      operationId: getCollectionStats
      parameters:
        - name: collection_slug
          in: path
          required: true
          description: The slug identifier for the collection to retrieve stats for.
          schema:
            type: string
      responses:
        '200':
          description: A successful response containing the collection's statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatsResponse'
        '400':
          description: Collection not found
        '500':
          description: Server error
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    SocialMediaAccount:
      type: object
      properties:
        platform:
          type: string
          description: Social media platform name
        username:
          type: string
          description: Social media username

    Account:
      type: object
      required:
        - address
        - username
        - profile_image_url
        - banner_image_url
        - website
        - bio
        - joined_date
      properties:
        address:
          type: string
          description: The account address
        username:
          type: string
          description: The username associated with the account
        profile_image_url:
          type: string
          description: URL of the profile image
        banner_image_url:
          type: string
          description: URL of the banner image
        website:
          type: string
          description: The website URL of the user
        social_media_accounts:
          type: array
          description: List of associated social media accounts
          items:
            $ref: '#/components/schemas/SocialMediaAccount'
        bio:
          type: string
          description: A short biography of the account holder
        joined_date:
          type: string
          description: The date when the account was created

    Price:
      type: object
      required:
        - currency
        - decimals
        - value
      properties:
        currency:
          type: string
          description: The currency used (e.g., "WETH")
        decimals:
          type: integer
          description: Number of decimals for the currency
        value:
          type: string
          description: The value in currency units

    CollectionCriteria:
      type: object
      required:
        - slug
      properties:
        slug:
          type: string
          description: The slug identifier of the collection

    ContractCriteria:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: The contract address

    TraitCriteria:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          description: The type of the trait (e.g., "Background")
        value:
          type: string
          description: The value of the trait (e.g., "Yellow")

    OfferItem:
      type: object
      required:
        - itemType
        - token
        - startAmount
        - endAmount
        - recipient
        - identifierOrCriteria
      properties:
        itemType:
          type: integer
          description: The type of item (e.g., 1 for ERC20)
        token:
          type: string
          description: Token address
        identifierOrCriteria:
          type: string
          description: Identifier or criteria for the token
        startAmount:
          type: string
          description: The starting amount
        endAmount:
          type: string
          description: The ending amount
        recipient:
          type: string
          description: Address of the recipient

    ProtocolParameters:
      type: object
      required:
        - offerer
        - offer
        - conduitKey
        - totalOriginalConsiderationItems
        - zone
        - zoneHash
        - salt
        - counter
        - orderType
        - startTime
        - endTime
        - consideration
      properties:
        offerer:
          type: string
          description: Address of the offerer
        offer:
          type: array
          items:
            $ref: '#/components/schemas/OfferItem'
        consideration:
          type: array
          items:
            $ref: '#/components/schemas/OfferItem'
        startTime:
          type: integer
          description: The start time (as string timestamp)
        endTime:
          type: integer
          description: The end time (as string timestamp)
        orderType:
          type: integer
          description: The type of order
        zone:
          type: string
          description: Address of the zone
        zoneHash:
          type: string
          description: The hash of the zone
        salt:
          type: string
          description: A unique value to prevent duplicate orders
        conduitKey:
          type: string
          description: The conduit key for the order
        totalOriginalConsiderationItems:
          type: integer
          description: Total number of original consideration items
        counter:
          type: string
          description: Must match the current counter for the given offerer. If you are unsure of the current counter, it can be read from the contract on etherscan.
    ProtocolData:
      type: object
      required:
        - parameters
      properties:
        parameters:
          $ref: '#/components/schemas/ProtocolParameters'
        signature:
          type: string
          description: The signature of the protocol data

    ContractInfo:
      type: object
      properties:
        address:
          type: string
          description: Contract address
        chain:
          type: string
          description: Blockchain of the contract

    CollectionFee:
      type: object
      properties:
        fee:
          type: number
          format: double
          description: Fee percentage
        recipient:
          type: string
          description: Address of the fee recipient
        required:
          type: boolean
          description: Whether the fee is required

    RarityInfo:
      type: object
      properties:
        strategy_id:
          type: string
          description: Rarity calculation strategy identifier
        strategy_version:
          type: string
          description: Version of the rarity calculation strategy
        calculated_at:
          type: string
          description: Timestamp when the rarity was calculated
        max_rank:
          type: integer
          description: Maximum rank of tokens
        tokens_scored:
          type: integer
          description: Number of tokens scored

    PaymentToken:
      type: object
      properties:
        symbol:
          type: string
          description: Payment token symbol
        address:
          type: string
          description: Address of the payment token
        chain:
          type: string
          description: Blockchain of the payment token
        image:
          type: string
          description: URL of the payment token's image
        name:
          type: string
          description: Name of the token
        decimals:
          type: integer
          description: Number of decimals of the token
        eth_price:
          type: string
          description: Price of the token in ETH
        usd_price:
          type: string
          description: Price of the token in USD

    Collection:
      type: object
      required:
        - collection
        - name
        - description
        - image_url
        - owner
        - total_supply
        - created_date
      properties:
        collection:
          type: string
          description: The slug identifier of the collection
        name:
          type: string
          description: The name of the collection
        description:
          type: string
          description: A detailed description of the collection
        image_url:
          type: string
          description: URL of the collection's image
        banner_image_url:
          type: string
          description: URL of the collection's banner image
        owner:
          type: string
          description: The Ethereum address of the collection owner
        safelist_status:
          type: string
          description: The safelist status of the collection
        category:
          type: string
          description: The category of the collection
        is_disabled:
          type: boolean
          description: Whether the collection is disabled
        is_nsfw:
          type: boolean
          description: Indicates if the collection contains NSFW content
        trait_offers_enabled:
          type: boolean
          description: Flags if trait offers are enabled
        collection_offers_enabled:
          type: boolean
          description: Flags if collection offers are enabled
        opensea_url:
          type: string
          description: URL to view the collection on OpenSea
        project_url:
          type: string
          description: Official project URL
        wiki_url:
          type: string
          description: URL to the wiki page (if available)
        discord_url:
          type: string
          description: Collection's Discord URL
        telegram_url:
          type: string
          description: Collection's Telegram URL
        twitter_username:
          type: string
          description: Twitter username associated with the collection
        instagram_username:
          type: string
          description: Instagram username associated with the collection
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ContractInfo'
        editors:
          type: array
          items:
            type: string
          description: List of editor addresses
        fees:
          type: array
          items:
            $ref: '#/components/schemas/CollectionFee'
        rarity:
          $ref: '#/components/schemas/RarityInfo'
        payment_tokens:
          type: array
          items:
            $ref: '#/components/schemas/PaymentToken'
        total_supply:
          type: integer
          description: Total number of items in the collection
        created_date:
          type: string
          description: Creation date of the collection

    CollectionStats:
      type: object
      required:
        - volume
        - sales
        - average_price
        - num_owners
        - market_cap
        - floor_price
        - floor_price_symbol
      properties:
        volume:
          type: number
          format: double
          description: Total trading volume
        sales:
          type: number
          format: double
          description: Total sales transactions
        average_price:
          type: number
          format: double
          description: Average price of items
        num_owners:
          type: integer
          description: Number of unique owners
        market_cap:
          type: number
          format: double
          description: The market cap
        floor_price:
          type: number
          format: double
          description: The lowest price of items
        floor_price_symbol:
          type: string
          description: The currency symbol for floor price

    StatsInterval:
      type: object
      required:
        - interval
        - volume
        - volume_diff
        - volume_change
        - sales
        - sales_diff
        - average_price
      properties:
        interval:
          type: string
          enum: ["one_day", "seven_day", "thirty_day"]
          description: The interval period
        volume:
          type: number
          format: double
          description: Trading volume during interval
        volume_diff:
          type: number
          format: double
          description: Volume difference vs previous interval
        volume_change:
          type: number
          format: double
          description: Percentage volume change
        sales:
          type: number
          format: double
          description: Number of sales
        sales_diff:
          type: number
          format: double
          description: Sales difference vs previous interval
        average_price:
          type: number
          format: double
          description: Average price during interval

    CollectionStatsResponse:
      type: object
      required:
        - total
        - intervals
      properties:
        total:
          $ref: '#/components/schemas/CollectionStats'
        intervals:
          type: array
          items:
            $ref: '#/components/schemas/StatsInterval'

    Offer:
      type: object
      required:
        - order_hash
        - chain
        - price
      properties:
        order_hash:
          type: string
          description: The hash of the order
        chain:
          type: string
          description: The blockchain on which the offer exists
        price:
          $ref: '#/components/schemas/Price'
        criteria:
          type: object
          required:
            - collection
            - contract
          properties:
            collection:
              $ref: '#/components/schemas/CollectionCriteria'
            contract:
              $ref: '#/components/schemas/ContractCriteria'
            trait:
              $ref: '#/components/schemas/TraitCriteria'
            encoded_token_ids:
              type: string
              description: Encoded token IDs. Use "*" for all tokens
        protocol_data:
          $ref: '#/components/schemas/ProtocolData'
        protocol_address:
          type: string
          description: The protocol address

    OffersResponse:
      type: object
      required:
        - offers
      properties:
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'

    OfferCriteria:
      type: object
      required:
        - collection
        - contract
      properties:
        collection:
          $ref: '#/components/schemas/CollectionCriteria'
        contract:
          $ref: '#/components/schemas/ContractCriteria'
        encoded_token_ids:
          type: string
          description: List of token IDs matching criteria

    CriteriaOffer:
      type: object
      required:
        - criteria
        - protocol_address
        - protocol_data
      properties:
        criteria:
          $ref: '#/components/schemas/OfferCriteria'
        protocol_address:
          type: string
          description: The exchange contract address
        protocol_data:
          $ref: '#/components/schemas/ProtocolData'


    CriteriaOfferResponse:
      type: object
      required:
        - order_hash
        - chain
      properties:
        order_hash:
          type: string
        chain:
          type: string
        price:
          $ref: '#/components/schemas/Price'
